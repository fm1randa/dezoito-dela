// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SearchImport } from './routes/_search'
import { Route as IndexImport } from './routes/index'
import { Route as GraziIndexImport } from './routes/grazi/index'
import { Route as SearchSearchImport } from './routes/_search/search'
import { Route as SearchResultsImport } from './routes/_search/results'

// Create/Update Routes

const SearchRoute = SearchImport.update({
  id: '/_search',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const GraziIndexRoute = GraziIndexImport.update({
  path: '/grazi/',
  getParentRoute: () => rootRoute,
} as any)

const SearchSearchRoute = SearchSearchImport.update({
  path: '/search',
  getParentRoute: () => SearchRoute,
} as any)

const SearchResultsRoute = SearchResultsImport.update({
  path: '/results',
  getParentRoute: () => SearchRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_search': {
      preLoaderRoute: typeof SearchImport
      parentRoute: typeof rootRoute
    }
    '/_search/results': {
      preLoaderRoute: typeof SearchResultsImport
      parentRoute: typeof SearchImport
    }
    '/_search/search': {
      preLoaderRoute: typeof SearchSearchImport
      parentRoute: typeof SearchImport
    }
    '/grazi/': {
      preLoaderRoute: typeof GraziIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  SearchRoute.addChildren([SearchResultsRoute, SearchSearchRoute]),
  GraziIndexRoute,
])
